1) Сделать понятные унифицированные модели - если использовать для каждого запроса разные модели,
то тупо запутаешься. Можно просто не заполнять некоторые поля (пароль и тд).
Сделать binding-модели (для общения внутри системы (создание сущностей, поиск)) и view-модели (для ответов на запросы)
Решение: Есть два типа моделей (Это не относится к работе с JWT и Identity) - <>Dto и <>ResponseDto. Первое отвечает за взаимодействие внутри приложения, второе - как модель представления
2) Сделать нормальное сохранение данных, скачанных парсером:
	2.1) Разобраться, зачем нужен флаг is_difference
	2.2) Сделать не замену занятий, а внести какой-то флаг в сущность занятия, 
	если изменилось расписание, чтобы не удалять его
	2.3) Сделать корректное сохранение скачанного расписания, чтобы ничего не ломалось:
		2.3.1) Можно сделать так, чтобы расписание у нас скачивалось только по преподавателям,
		которые уже есть в системе. Либо скачивать и создавать всех преподавателей.
3) Сделать работу сканирования qr-кода
4) Сделать разделение ролей
5) Сделать синхронизацию с LDAP
6) Сделать генерацию отчетов
